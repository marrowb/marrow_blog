x-app: &default-app
  build:
    context: "."
    target: "app"
    args:
      - "UID=${UID:-1000}"
      - "GID=${GID:-1000}"
      - "FLASK_DEBUG=${FLASK_DEBUG:-false}"
  env_file:
    - ".env"
  restart: "${DOCKER_RESTART_POLICY:-unless-stopped}"
  stop_grace_period: "3s"
  tty: true

services:
  dev:
    <<: *default-app
    develop:
      watch:
        - action: sync
          path: ./assets/static/
          target: /app/public
    ports:
      - "${DOCKER_WEB_PORT_FORWARD:-127.0.0.1:8000}:${PORT:-8000}"
    volumes:
      - "sqlite_data:/app/data"
    profiles: ["dev"]

  web:
    <<: *default-app
    deploy:
      resources:
        limits:
          cpus: "${DOCKER_WEB_CPUS:-0}"
          memory: "${DOCKER_WEB_MEMORY:-0}"
    healthcheck:
      test: "${DOCKER_WEB_HEALTHCHECK_TEST:-curl localhost:8000/up}"
      interval: "60s"
      timeout: "3s"
      start_period: "5s"
      retries: 3
    ports:
      - "${DOCKER_WEB_PORT_FORWARD:-127.0.0.1:8000}:${PORT:-8000}"
    volumes:
      - "${DOCKER_WEB_VOLUME:-./public:/app/public}"
      - "sqlite_data:/app/data"
    profiles: ["web"]

  worker:
    <<: *default-app
    command: celery -A "marrow_blog.app.celery_app" worker -l "${CELERY_LOG_LEVEL:-info}"
    entrypoint: []
    deploy:
      resources:
        limits:
          cpus: "${DOCKER_WORKER_CPUS:-0}"
          memory: "${DOCKER_WORKER_MEMORY:-0}"
    volumes:
      - "${DOCKER_WEB_VOLUME:-./public:/app/public}"
      - "sqlite_data:/app/data"
    profiles: ["worker"]

volumes:
  sqlite_data: {}
